CREATE DATABASE 'localhost:/firebird/data/VMRMEMBERS.FDB'
USER 'SYSDBA' PASSWORD 'vmrdbpass'
PAGE_SIZE 4096
DEFAULT CHARACTER SET NONE;

/* Generators */
CREATE SEQUENCE GEN_CREWASSIGNMENTS_ID;

ALTER SEQUENCE GEN_CREWASSIGNMENTS_ID RESTART WITH 100;
CREATE SEQUENCE GEN_DUTYLOG_ID;

ALTER SEQUENCE GEN_DUTYLOG_ID RESTART WITH 0;
CREATE SEQUENCE GEN_GROUPID;

ALTER SEQUENCE GEN_GROUPID RESTART WITH 0;
CREATE SEQUENCE GEN_USERACCESSID;

ALTER SEQUENCE GEN_USERACCESSID RESTART WITH 0;
CREATE SEQUENCE GEN_USERID;

ALTER SEQUENCE GEN_USERID RESTART WITH 0;
CREATE SEQUENCE GEN_VMRBOATS_ID;

ALTER SEQUENCE GEN_VMRBOATS_ID RESTART WITH 0;

/* Tables */
CREATE TABLE BANKSTATEMENT (
  PROCESSDATE     DATE,
  SEQUENCENO      INTEGER,
  DESCRIPTION     CHAR(64),
  AMOUNT          NUMERIC(9,2),
  BALANCE         NUMERIC(9,2),
  MEMBERNO        INTEGER,
  MEMBERNAME      CHAR(50),
  TRANSTYPE       CHAR(20),
  ACCEPT          CHAR,
  MEMBERSHIPOLD   CHAR(30),
  MEMBERSHIPNEW   CHAR(30),
  FEE             NUMERIC(9,2),
  DONATION        NUMERIC(9,2),
  RENEWALDATEOLD  DATE,
  RENEWALDATENEW  DATE,
  PROCESSED       CHAR
) ;

CREATE TABLE BANKSTATEMENTPROCESSED (
  PROCESSDATE     DATE,
  SEQUENCENO      INTEGER,
  DESCRIPTION     CHAR(64),
  AMOUNT          NUMERIC(9,2),
  BALANCE         NUMERIC(9,2),
  MEMBERNO        INTEGER,
  MEMBERNAME      CHAR(50),
  TRANSTYPE       CHAR(20),
  ACCEPT          CHAR,
  MEMBERSHIPOLD   CHAR(30),
  MEMBERSHIPNEW   CHAR(30),
  FEE             NUMERIC(9,2),
  DONATION        NUMERIC(9,2),
  RENEWALDATEOLD  DATE,
  RENEWALDATENEW  DATE,
  PROCESSED       CHAR
) ;

CREATE TABLE BASECHECKS (
  "SEQUENCE"                  INTEGER NOT NULL,
  HEADING                     CHAR(64),
  SUBHEADING                  BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  SUBHEADINGALLOWCHECK_START  CHAR,
  SUBHEADINGALLOWCHECK_END    CHAR,
  SUBHEADINGALLOWQTY          CHAR,
  SUBQTY                      INTEGER,
  FRIDAYCREW                  CHAR,
  SATURDAYCREW                CHAR,
  DATEFROM                    DATE,
  DATETO                      DATE
) ;

CREATE TABLE BOATCHECKS (
  VESSEL                   INTEGER,
  "SEQUENCE"               INTEGER,
  HEADING                  CHAR(64),
  SUBHEADING               CHAR(64),
  SUBSEQ                   INTEGER,
  SUBHEADINGALLOWCHECK     CHAR,
  SUBCHECK                 CHAR,
  SUBHEADINGALLOWQTY       CHAR,
  SUBQTY                   INTEGER,
  SUBSUBHEADING            CHAR(64),
  SUBSUBSEQ                INTEGER,
  SUBSUBHEADINGALLOWCHECK  CHAR,
  SUBSUBCHECK              CHAR,
  SUBSUBQTY                INTEGER,
  SUBSUBHEADINGALLOWQTY    CHAR,
  DATEFROM                 DATE,
  DATETO                   DATE
) ;

CREATE TABLE BOATS (
  MEMBERNO       INTEGER NOT NULL,
  BOATNO         INTEGER,
  BOATDATE       DATE,
  BOATNAME       CHAR(50),
  BOATREGO       CHAR(10),
  BOATCALLSIGN   CHAR(10),
  BOATOWNER      CHAR(50),
  BOATTYPE       CHAR(50),
  BOATMAKEMODEL  CHAR(50),
  BOATCOLOUR     CHAR(50),
  BOATLENGTH     CHAR(50),
  BOATMOTORS     CHAR(50),
  BOATHP         CHAR(20),
  BOATHF         CHAR,
  BOATVHF        CHAR,
  BOAT27MEG      CHAR,
  BOATCB27MEG    CHAR,
  BOATCBUHF      CHAR,
  BOATEPIRB      CHAR,
  BOATGPS        CHAR,
  BOATAUTOPILOT  CHAR,
  BOATRADAR      CHAR,
  BOATOTHER      CHAR
) ;

CREATE TABLE BPAYSTATEMENT (
  PAYMENTDATE           DATE,
  SEQUENCENO            INTEGER,
  BILLERCODE            CHAR(20),
  CUSTOMERREF           CHAR(20),
  RECEIVABLETYPE        CHAR(20),
  PAYMENTMETHOD         CHAR(20),
  BPAYTYPE              CHAR(30),
  TRANSACTIONREFERENCE  CHAR(30),
  SETTLEMENTDATE        DATE,
  AMOUNT                NUMERIC(9,2),
  MEMBERNO              INTEGER,
  MEMBERNAME            CHAR(50),
  TRANSTYPE             CHAR(20),
  ACCEPT                CHAR,
  MEMBERSHIPOLD         CHAR(30),
  MEMBERSHIPNEW         CHAR(30),
  FEE                   NUMERIC(9,2),
  DONATION              NUMERIC(9,2),
  RENEWALDATEOLD        DATE,
  RENEWALDATENEW        DATE,
  PROCESSED             CHAR
) ;

CREATE TABLE BPAYSTATEMENTPROCESSED (
  PAYMENTDATE           DATE,
  SEQUENCENO            INTEGER,
  BILLERCODE            CHAR(20),
  CUSTOMERREF           CHAR(20),
  RECEIVABLETYPE        CHAR(20),
  PAYMENTMETHOD         CHAR(20),
  BPAYTYPE              CHAR(30),
  TRANSACTIONREFERENCE  CHAR(30),
  SETTLEMENTDATE        DATE,
  AMOUNT                NUMERIC(9,2),
  MEMBERNO              INTEGER,
  MEMBERNAME            CHAR(50),
  TRANSTYPE             CHAR(20),
  ACCEPT                CHAR,
  MEMBERSHIPOLD         CHAR(30),
  MEMBERSHIPNEW         CHAR(30),
  FEE                   NUMERIC(9,2),
  DONATION              NUMERIC(9,2),
  RENEWALDATEOLD        DATE,
  RENEWALDATENEW        DATE,
  PROCESSED             CHAR
) ;

CREATE TABLE BPOINTSTATEMENT (
  BPOINTFILENAME        CHAR(64),
  SETTLEMENTDATE        DATE,
  SEQUENCENO            INTEGER NOT NULL,
  BILLERCODE            CHAR(20),
  CUSTOMERREF1          CHAR(64),
  CUSTOMERREF2          CHAR(64),
  CUSTOMERREF3          CHAR(64),
  AMOUNT_FULL           DOUBLE PRECISION,
  AMOUNT_SURCHARGE      DOUBLE PRECISION,
  AMOUNT_LESSSURCHARGE  DOUBLE PRECISION,
  BPOINT_RECEIPT        CHAR(20),
  CARDTYPE              CHAR(10),
  TRANSACTIONDATE       DATE,
  TRANSACTIONSOURCE     CHAR(10),
  WEBRECORDNO           INTEGER,
  MEMBERNO              INTEGER,
  MEMBERNAME            CHAR(50),
  TRANSTYPE             CHAR(20),
  ACCEPT                CHAR,
  MEMBERSHIPOLD         CHAR(30),
  MEMBERSHIPNEW         CHAR(30),
  FEE                   DOUBLE PRECISION,
  DONATION              DOUBLE PRECISION,
  SURCHARGE             DOUBLE PRECISION,
  RENEWALDATEOLD        DATE,
  RENEWALDATENEW        DATE,
  PROCESSED             CHAR,
  SURNAMEDONTMATCH      CHAR
) ;

CREATE TABLE BPOINTSTATEMENTPROCESSED (
  BPOINTFILENAME        CHAR(64),
  SETTLEMENTDATE        DATE,
  SEQUENCENO            INTEGER,
  BILLERCODE            CHAR(20),
  CUSTOMERREF1          CHAR(64),
  CUSTOMERREF2          CHAR(64),
  CUSTOMERREF3          CHAR(64),
  AMOUNT_FULL           DOUBLE PRECISION,
  AMOUNT_SURCHARGE      DOUBLE PRECISION,
  AMOUNT_LESSSURCHARGE  DOUBLE PRECISION,
  BPOINT_RECEIPT        CHAR(20),
  CARDTYPE              CHAR(10),
  TRANSACTIONDATE       DATE,
  TRANSACTIONSOURCE     CHAR(10),
  WEBRECORDNO           INTEGER,
  MEMBERNO              INTEGER,
  MEMBERNAME            CHAR(50),
  TRANSTYPE             CHAR(20),
  ACCEPT                CHAR,
  MEMBERSHIPOLD         CHAR(30),
  MEMBERSHIPNEW         CHAR(30),
  FEE                   DOUBLE PRECISION,
  DONATION              DOUBLE PRECISION,
  SURCHARGE             DOUBLE PRECISION,
  RENEWALDATEOLD        DATE,
  RENEWALDATENEW        DATE,
  PROCESSED             CHAR,
  SURNAMEDONTMATCH      CHAR
) ;

CREATE TABLE COMMITTEE (
  "POSITION"            CHAR(40),
  RANKING               INTEGER,
  CURRENTMEMBER         INTEGER,
  CURRENTMEMBERDATE     DATE,
  CURRENTMEMBERCOMMENT  CHAR(96)
) ;

CREATE TABLE COMMITTEEHISTORY (
  MEMBERNO           INTEGER NOT NULL,
  COMMITTEEDATE      DATE,
  COMMITTEEPOSITION  CHAR(64),
  VACATEDDATE        DATE,
  "COMMENT"          CHAR(96)
) ;

CREATE TABLE COURSES (
  NONAME      CHAR(30),
  INSTNAME    CHAR(50),
  ASSESSNAME  CHAR(50),
  INSTNO      INTEGER,
  ASSESSNO    INTEGER,
  STARTDATE   TIMESTAMP,
  ENDDATE     TIMESTAMP,
  NOTES       BLOB SUB_TYPE TEXT SEGMENT SIZE 20
) ;

CREATE TABLE CREDITCARDS (
  TRANSDATE                DATE,
  PAYMENTTYPE              CHAR(20),
  MEMBERNO                 INTEGER,
  MEMBERNAME               CHAR(64),
  MEMBERSHIP               CHAR(30),
  MEMBEREXPIRY             DATE,
  TRANSTYPE                CHAR(20),
  MEMBERFEE                DOUBLE PRECISION,
  MEMBERDONATION           DOUBLE PRECISION,
  SURCHARGE                DOUBLE PRECISION,
  AMOUNTCHARGED            DOUBLE PRECISION,
  CREDITCARDNUMBER         CHAR(20),
  CCEXPIRYDATE             CHAR(5),
  CVV                      CHAR(6),
  BPOINTRESPONSECODE       CHAR(20),
  BPOINTRESPONSE           CHAR(96),
  BPOINTACQUIRERRESPONSE   CHAR(20),
  BPOINTTRANSACTIONNUMBER  CHAR(20),
  BPOINTRECEIPTNUMBER      CHAR(20),
  BPOINTAUTHORISEID        CHAR(20),
  BPOINTSETTLEMENTDATE     CHAR(20),
  BPOINTMASKEDCARDNO       CHAR(20),
  BPOINTCARDTYPE           CHAR(20),
  PROCESSED                CHAR
) ;

CREATE TABLE CREWHISTORY (
  MEMBERNO     INTEGER NOT NULL,
  CREWDATE     DATE,
  CREWNAME     CHAR(10),
  CREWCOMMENT  CHAR(96)
) ;

CREATE TABLE CREWS (
  CREWNAME  CHAR(10) NOT NULL,
  BOATCREW  CHAR DEFAULT 'N' NOT NULL
) ;

CREATE TABLE DONATIONTYPES (
  DONATIONTYPE  CHAR(30) NOT NULL,
  RANKING       INTEGER NOT NULL
) ;

CREATE TABLE DUTYBASECHECKS (
  DUTYSEQUENCE                INTEGER NOT NULL,
  "SEQUENCE"                  INTEGER NOT NULL,
  HEADING                     CHAR(64),
  SUBHEADING                  BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  SUBHEADINGALLOWCHECK_START  CHAR,
  CHECK_START                 CHAR,
  SUBHEADINGALLOWCHECK_END    CHAR,
  CHECK_END                   CHAR,
  SUBHEADINGALLOWQTY          CHAR,
  SUBQTY                      INTEGER,
  FRIDAYCREW                  CHAR,
  SATURDAYCREW                CHAR,
  NOTES                       BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  CHECKER                     CHAR(64)
) ;

CREATE TABLE DUTYBOATCHECKS (
  DUTYSEQUENCE   INTEGER,
  VESSEL         INTEGER,
  "SEQUENCE"     INTEGER,
  HEADING        CHAR(64),
  SUBHEADING     CHAR(64),
  SUBSEQ         INTEGER,
  SUBCHECK       CHAR,
  SUBQTY         INTEGER,
  SUBSUBHEADING  CHAR(64),
  SUBSUBSEQ      INTEGER,
  SUBSUBCHECK    CHAR,
  SUBSUBQTY      INTEGER
) ;

CREATE TABLE DUTYCREWS (
  DUTYSEQUENCE  INTEGER,
  CREWMEMBER    INTEGER,
  CREWRANK      CHAR(30),
  CREWRANKING   INTEGER,
  DUTYSKIPPER   CHAR,
  CREWHOURS     NUMERIC(5,2)
) ;

CREATE TABLE DUTYFIRSTAIDCHECKS (
  DUTYSEQUENCE  INTEGER NOT NULL,
  VESSEL        INTEGER NOT NULL,
  "SEQUENCE"    INTEGER NOT NULL,
  HEADING       CHAR(64),
  SUBHEADING    CHAR(64),
  SUBSEQ        INTEGER NOT NULL,
  SUBCHECK      CHAR,
  SUBQTY        INTEGER
) ;

CREATE TABLE DUTYJOBS (
  JOBDUTYSEQUENCE      INTEGER NOT NULL,
  JOBJOBSEQUENCE       INTEGER,
  JOBTIMEOUT           TIMESTAMP,
  JOBTIMEIN            TIMESTAMP,
  JOBDUTYVESSELNAME    CHAR(30),
  JOBDUTYVESSELNO      INTEGER,
  JOBTYPE              CHAR(20),
  JOBACTIONTAKEN       CHAR(20),
  JOBEMERGENCY         CHAR,
  JOBPOLICE            CHAR,
  JOBASSISTNO          INTEGER,
  JOBVESSELNAME        CHAR(30),
  JOBVESSELREGO        CHAR(10),
  JOBLOA               CHAR(10),
  JOBVESSELTYPE        CHAR(20),
  JOBADULTS            INTEGER,
  JOBCHILDREN          INTEGER,
  JOBVMRAQNO           INTEGER,
  JOBDONATION          NUMERIC(9,2),
  JOBDETAILS           CHAR(96),
  JOBACTIVATION        CHAR(20),
  JOBFREQUENCY         CHAR(30),
  JOBHOURSSTART        DOUBLE PRECISION,
  JOBHOURSEND          DOUBLE PRECISION,
  JOBCOMMERCIALVESSEL  CHAR,
  JOBPROPULSION        CHAR(20),
  JOBWEATHER           CHAR(20),
  JOBWINDSPEED         CHAR(20),
  JOBWINDDIRECTION     CHAR(3),
  JOBSEAS              CHAR(20),
  JOBWATERLIMITS       CHAR(20),
  JOBQASNO             CHAR(10),
  JOBLOCKED            CHAR,
  JOBMEMBERNO          INTEGER,
  JOBDETAILS_LONG      BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  JOBMEMBERNAME        CHAR(60),
  JOBMEMBERSHIP        CHAR(30),
  JOBMEMBEREXPIRY      DATE,
  JOBREMARKS           CHAR(96),
  JOBASSISTNOSTR       CHAR(10),
  JOBRISK1             INTEGER,
  JOBRISK2             INTEGER,
  JOBRISK3             INTEGER,
  JOBRISK4             INTEGER,
  JOBRISK5             INTEGER,
  JOBLATDEG            INTEGER,
  JOBLATMIN            INTEGER,
  JOBLATSEC            DOUBLE PRECISION,
  JOBLONDEG            INTEGER,
  JOBLONMIN            INTEGER,
  JOBLONSEC            DOUBLE PRECISION,
  JOBLATDEC            DOUBLE PRECISION,
  JOBLONDEC            DOUBLE PRECISION
) ;

CREATE TABLE DUTYJOBSCREW (
  CREWDUTYSEQUENCE  INTEGER,
  CREWJOBSEQUENCE   INTEGER,
  CREWMEMBER        INTEGER,
  CREWRANKING       INTEGER,
  SKIPPER           CHAR,
  CREWONJOB         CHAR
) ;

CREATE TABLE DUTYLOG (
  DUTYSEQUENCE      INTEGER NOT NULL,
  DUTYDATE          DATE,
  CREW              CHAR(10),
  SKIPPER           INTEGER,
  MEMOEQUIP         BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  MEMOINJURIES      BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  FUELDIPSTART      INTEGER,
  FUELDIPEND        INTEGER,
  DONATIONS         FLOAT,
  JOBSEQUENCE       INTEGER,
  MEMONEWCREW       BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  DUTYLOGLOCKED     CHAR,
  BASECHECKNOTES    BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  BASECHECKCHECKER  CHAR(96)
) ;

CREATE TABLE DUTYVESSELS (
  DUTYSEQUENCE          INTEGER,
  DUTYVESSELNO          INTEGER,
  DUTYVESSELNAME        CHAR(30),
  STARTHOURSPORT        DOUBLE PRECISION,
  ENDHOURSPORT          DOUBLE PRECISION,
  STARTHOURSSTAR        DOUBLE PRECISION,
  ENDHOURSSTAR          DOUBLE PRECISION,
  FUELUSED              DOUBLE PRECISION,
  DUTYENGINES           INTEGER,
  DUTYRANKING           INTEGER,
  BOATCHECKNOTES        BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  BOATCHECKCHECKER      CHAR(64),
  FIRSTAIDCHECKNOTES    BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  FIRSTAIDCHECKCHECKER  CHAR(64)
) ;

CREATE TABLE FEETYPES (
  FEETYPE  CHAR(30) NOT NULL,
  RANKING  INTEGER NOT NULL
) ;

CREATE TABLE FIRSTAIDCHECKS (
  VESSEL                INTEGER NOT NULL,
  "SEQUENCE"            INTEGER NOT NULL,
  HEADING               CHAR(64),
  SUBHEADING            CHAR(64),
  SUBSEQ                INTEGER NOT NULL,
  SUBHEADINGALLOWCHECK  CHAR,
  SUBCHECK              CHAR,
  SUBHEADINGALLOWQTY    CHAR,
  SUBQTY                INTEGER,
  DATEFROM              DATE,
  DATETO                DATE
) ;

CREATE TABLE GROUPACCESS (
  GROUPNAME   VARCHAR(40),
  PERMISSION  VARCHAR(40)
) ;

CREATE TABLE GROUPMEMBERS (
  USERNAME   VARCHAR(40),
  GROUPNAME  VARCHAR(40)
) ;

CREATE TABLE GROUPS (
  GROUPID      INTEGER,
  GROUPNAME    VARCHAR(40),
  DESCRIPTION  VARCHAR(100)
) ;

CREATE TABLE JOBS (
  MEMBERNO        INTEGER,
  BOATNO          INTEGER,
  JOBSTOWNO       INTEGER,
  JOBSJOBNO       CHAR(30),
  JOBSDATE        DATE,
  JOBSREGO        CHAR(20),
  JOBSASSISTTYPE  CHAR(30),
  JOBSREMARKS     CHAR(50),
  JOBDETAILS      CHAR(96)
) ;

CREATE TABLE JOINREASONS (
  JOINREASON   CHAR(50),
  JOINRANKING  INTEGER NOT NULL
) ;

CREATE TABLE LETTERS (
  LETTERNAME     CHAR(40),
  LETTERCONTENT  BLOB SUB_TYPE TEXT SEGMENT SIZE 20
) ;

CREATE TABLE MEMBERDIARY (
  DIARYMEMBERNO  INTEGER NOT NULL,
  DIARYDATETIME  TIMESTAMP NOT NULL,
  DIARYSUBJECT   CHAR(60),
  DIARYMEMO      BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  DIARYFROM      CHAR(60)
) ;

CREATE TABLE MEMBERS (
  MEMBERNOLOCAL                 INTEGER NOT NULL,
  MEMBERNOVMRAQ                 INTEGER,
  SURNAME                       CHAR(50),
  "FIRSTNAME"                   CHAR(50),
  NAME03                        CHAR(50),
  TITLE                         CHAR(20),
  NAMETYPE                      CHAR,
  POADDR1                       CHAR(50),
  POADDR2                       CHAR(50),
  POSUBURB                      CHAR(50),
  POSTATE                       CHAR(3),
  POPCODE                       CHAR(4),
  STADDR1                       CHAR(50),
  STADDR2                       CHAR(50),
  STSUBURB                      CHAR(50),
  STSTATE                       CHAR(3),
  STPCODE                       CHAR(4),
  PHONE_HOME                    CHAR(20),
  PHONE_WORK                    CHAR(20),
  PHONE_MOBILE                  CHAR(20),
  PHONE_CALLOUT                 CHAR(20),
  EMAIL1                        CHAR(96),
  EMAIL2                        CHAR(96),
  EMAILMRQ                      CHAR(96),
  VSHEET                        CHAR,
  CURRENTCREW                   CHAR(10),
  CURRENTCREWDATE               DATE,
  CURRENTRANK                   CHAR(30),
  CURRENTRANKDATE               DATE,
  DUTYSKIPPER                   CHAR,
  LOA                           CHAR,
  LOARETURN                     DATE,
  NOTES                         BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  DATEJOINED                    DATE,
  DATEBIRTH                     DATE,
  VMRAQCOXSWAINSMOOTH           DATE,
  VMRAQCOXSWAINPARTIALLYSMOOTH  DATE,
  VMRAQCOXSWAINOPEN             DATE,
  MSQCOMMERCIALCOXSWAIN         DATE,
  VMR400RECRUIT                 DATE,
  VMR400CREW                    DATE,
  VMR400SENIORCREW              DATE,
  VMR400INSHORE                 DATE,
  VMR400COXSWAIN                DATE,
  VMR400OFFSHORE                DATE,
  OCCUPATION                    CHAR(50),
  APPLICATIONDATE               DATE,
  JOINDATE                      DATE,
  SESDATE                       DATE,
  FITDATE                       DATE,
  EMERGENCYDATE                 DATE,
  SESNO                         CHAR(15),
  NEXTOFKIN                     CHAR(150),
  NEXTOFKINPHONES               CHAR(60),
  EMERGENCYPERSONS              CHAR(150),
  EMERGENCYPHONES               CHAR(60),
  ALLERGIES                     CHAR(150),
  MEDICALNOTES                  BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  JOINREASON                    CHAR(50),
  AWARDYEAR5                    CHAR(7),
  AWARDYEAR10                   CHAR(7),
  AWARDYEAR15                   CHAR(7),
  AWARDYEAR20                   CHAR(7),
  APPLICATIONRECEIVED           CHAR(10),
  MEMBERSHIPFEE                 DECIMAL(9,2),
  MEMBERTYPE                    CHAR(20),
  MEMBEREXPIRYDATE              DATE,
  CURRENTMEMBERSHIP             CHAR(20),
  CURRENTEXPIRYDATE             DATE,
  RECEIPTNO                     INTEGER,
  ENTRYDATE                     DATE,
  BOATOWNER                     CHAR,
  OLDASRNO                      CHAR(20),
  SES2DATE                      DATE,
  QUAL_FIRSTAID1_CERT           CHAR(10),
  QUAL_FIRSTAID1_DATE           DATE,
  QUAL_FIRSTAID2_CERT           CHAR(10),
  QUAL_FIRSTAID2_DATE           DATE,
  QUAL_FIRSTAID3_CERT           CHAR(10),
  QUAL_FIRSTAID3_DATE           DATE,
  QUAL_FIRSTAID4_CERT           CHAR(10),
  QUAL_FIRSTAID4_DATE           DATE,
  QUAL_TRAINER_CERT             CHAR(10),
  QUAL_TRAINER_DATE             DATE,
  MROCP_CERT                    CHAR(10),
  MROCP_DATE                    DATE,
  BOATLICENCE                   CHAR,
  BOATLICENCENO                 CHAR(15),
  BOATLICENCEDATE               DATE,
  COMMERCIALCOXSWAIN            CHAR(20),
  COMMERCIALCOXSWAINDATE        DATE,
  MSQASSESSOR                   CHAR(20),
  MSQASSESSORDATE               DATE,
  OTHERQUALIFICATIONS           CHAR(96),
  AWARDYEAR30                   CHAR(7),
  AWARDYEAR40                   CHAR(7),
  AWARDYEAR50                   CHAR(7),
  DATEAWARDS                    DATE,
  DATEAWARDSDAYS                INTEGER,
  CURRENTFREEBIE                CHAR,
  WASAFREEBIE                   CHAR,
  NEWMEMBERDATE                 DATE,
  APPLICATIONFORMRECEIVED       CHAR,
  UNFINANCIAL                   CHAR,
  COMPANYNAME                   CHAR(50),
  AWARD_OTH_1                   CHAR,
  AWARD_OTH_1_DATE              DATE,
  "VERSION"                     INTEGER,
  CURRENTCOMMITTEEPOSITION      CHAR(64),
  CURRENTCOMMITTEEDATE          DATE,
  EMERGENCY_NOTES               BLOB SUB_TYPE TEXT SEGMENT SIZE 20,
  EMERGENCY_ONLY                CHAR,
  VSHEET_ELECTRONIC             CHAR,
  VSHEET_GROUP                  CHAR,
  EMAIL_UNSUBSCRIBE             CHAR,
  USINO                         CHAR(20),
  AWARDYEAR25                   CHAR(7),
  AWARDYEAR35                   CHAR(7),
  AWARDYEAR45                   CHAR(7),
  BECOMECREW                    CHAR,
  BECOMERADIO                   CHAR,
  BECOMEADMIN                   CHAR,
  BECOMEGENERAL                 CHAR,
  RENEW_AUTO                    CHAR,
  VMR400INSHOREENDORSED         DATE,
  AWARDLIFE                     CHAR(7),
  AWARD_LIFE_DATE               DATE,
  AWARDNATMEDAL                 CHAR(7),
  AWARDNATMEDAL10               CHAR(7),
  AWARDNATMEDAL20               CHAR(7),
  AWARDNATMEDAL30               CHAR(7),
  AWARDNATMEDAL40               CHAR(7),
  AWARDNATMEDAL50               CHAR(7),
  NEVERRENEW                    CHAR,
  TRAININGBLOCK                 CHAR,
  STOPTRAINING                  CHAR
) ;

CREATE TABLE MEMBERTRANS (
  MEMBERNO        INTEGER NOT NULL,
  TRANSDATE       TIMESTAMP NOT NULL,
  TRANSTYPE       CHAR(30),
  MEMBERSHIPTYPE  CHAR(30),
  AMOUNTPAID      DECIMAL(6,2),
  RECEIPTNO       INTEGER,
  EXPIRYDATE      DATE,
  "COMMENT"       CHAR(96)
) ;

CREATE TABLE MEMBERTYPES (
  MEMBERTYPE        CHAR(30) NOT NULL,
  MEMBERRANKING     INTEGER NOT NULL,
  MEMBERPRICE       DECIMAL(6,2),
  EXPIRYTYPE        CHAR(15),
  MEMBERPRICERENEW  DECIMAL(6,2),
  MEMBERACTIVE      CHAR
) ;

CREATE TABLE PAYMENTTYPES (
  PAYTYPE  CHAR(15) NOT NULL,
  RANKING  INTEGER NOT NULL
) ;

CREATE TABLE PERMISSIONS (
  PERMISSION  VARCHAR(40),
  ITEMS       BLOB SUB_TYPE TEXT,
  ACTIONS     INTEGER,
  FORMNAME    VARCHAR(40)
) ;

CREATE TABLE RANKHISTORY (
  MEMBERNO     INTEGER NOT NULL,
  RANKDATE     DATE,
  RANKNAME     CHAR(30),
  RANKCOMMENT  CHAR(96)
) ;

CREATE TABLE RANKS (
  RANKNAME          CHAR(30) NOT NULL,
  RANKING           INTEGER NOT NULL,
  RANKNAMESHORT     CHAR(30),
  RANKNAMETRAINING  CHAR(40)
) ;

CREATE TABLE RECEIPTS (
  MEMBERNO     INTEGER NOT NULL,
  RECEIPTNO    INTEGER NOT NULL,
  RECEIPTDATE  DATE,
  FEE          DOUBLE PRECISION,
  DONATION     DOUBLE PRECISION,
  DONATIONFOR  CHAR(50),
  PAYMENTTYPE  CHAR(20),
  FEEFOR       CHAR(50),
  DRAWER       CHAR(50),
  BANK         CHAR(25),
  BSB          CHAR(25),
  ACCOUNTNO    INTEGER,
  CHEQUENO     INTEGER,
  TRANSDATE    DATE,
  MEMBERTYPE   CHAR(30),
  TOTALAMT     DOUBLE PRECISION,
  SURCHARGE    DOUBLE PRECISION,
  MERCHANTFEE  DOUBLE PRECISION,
  STRIPEFEE    DOUBLE PRECISION
) ;

CREATE TABLE REPORTS (
  REPORTNAME  CHAR(30),
  REPORTBLOB  BLOB SUB_TYPE BINARY SEGMENT SIZE 20
) ;

CREATE TABLE SECUSER (
  LOGINNAME    VARCHAR(40),
  USERID       INTEGER,
  FULLNAME     VARCHAR(50),
  PWD          VARCHAR(40),
  LASTACCESS   TIMESTAMP,
  ENABLED      CHAR,
  CREATEDDATE  TIMESTAMP,
  LASTACCTIME  TIME,
  CREATEDTIME  TIME,
  ACCESSCOUNT  INTEGER
) ;

CREATE TABLE SKIPPERCHECKS (
  VESSEL           INTEGER NOT NULL,
  "SEQUENCE"       INTEGER NOT NULL,
  HEADING          CHAR(64),
  CHECKSTART       CHAR,
  CHECKEND         CHAR,
  CHECKSTARTALLOW  CHAR,
  CHECKENDALLOW    CHAR,
  DATEFROM         DATE,
  DATETO           DATE
) ;

CREATE TABLE STRIPESTATEMENT (
  STRIPECHARGEID          CHAR(64),
  SETTLEMENTDATE          DATE,
  SEQUENCENO              INTEGER NOT NULL,
  WEB_ORDERID             CHAR(32),
  WEB_ID                  INTEGER,
  STRIPECUSTOMERNAME      CHAR(64),
  STRIPECUSTOMEREMAIL     CHAR(64),
  STRIPECHARGEDESC        CHAR(64),
  STRIPE_AMOUNT_FEE       DOUBLE PRECISION,
  AMOUNT_FULL             DOUBLE PRECISION,
  AMOUNT_SURCHARGE        DOUBLE PRECISION,
  AMOUNT_NETCHARGE        DOUBLE PRECISION,
  CARDTYPE                CHAR(10),
  TRANSACTIONDATE         DATE,
  WEBRECORDNO             INTEGER,
  MEMBERNO                INTEGER,
  MEMBERNAME              CHAR(64),
  TRANSTYPE               CHAR(20),
  ACCEPT                  CHAR,
  MEMBERSHIPOLD           CHAR(30),
  MEMBERSHIPNEW           CHAR(30),
  FEE                     DOUBLE PRECISION,
  DONATION                DOUBLE PRECISION,
  SURCHARGE               DOUBLE PRECISION,
  RENEWALDATEOLD          DATE,
  RENEWALDATENEW          DATE,
  PROCESSED               CHAR,
  SURNAMEDONTMATCH        CHAR,
  TRANSACTIONSOURCE       CHAR(10),
  CUSTOMERREF1            CHAR(64),
  CUSTOMERREF2            CHAR(64),
  CUSTOMERREF3            CHAR(64),
  STRIPE_RECEIPT          CHAR(20),
  WEB_DATE                CHAR(32),
  WEB_MEMBERNO            CHAR(20),
  WEB_SURNAME             CHAR(64),
  WEB_FIRSTNAME           CHAR(32),
  WEB_DATEOFBIRTH         CHAR(32),
  WEB_MOBILE              CHAR(32),
  WEB_EMAIL               CHAR(64),
  WEB_ADDR_LINE           CHAR(64),
  WEB_ADDR_LINE2          CHAR(64),
  WEB_ADDR_SUBURB         CHAR(32),
  WEB_ADDR_PCODE          CHAR(32),
  WEB_SKU                 CHAR(30),
  WEB_PAID                INTEGER,
  WEB_RENEWAL             CHAR(30),
  WEB_VESSELNAME          CHAR(32),
  WEB_VESSELREGO          CHAR(32),
  WEB_VESSELMAKE          CHAR(48),
  WEB_VESSELTYPE          CHAR(32),
  WEB_VESSELCOLOUR        CHAR(32),
  WEB_VESSELLENGTH        CHAR(32),
  WEB_VESSELLENGTHF       CHAR(32),
  WEB_VESSELMARINERADIO   CHAR(32),
  WEB_VESSEL27MHZ         CHAR(32),
  WEB_VESSELVHF           CHAR(32),
  WEB_VESSELHF            CHAR(32),
  WEB_VESSELEPIRB         CHAR(32),
  WEB_VESSELNAVEQUIP      CHAR(32),
  WEB_VESSELGPS           CHAR(32),
  WEB_VESSELRADAR         CHAR(32),
  WEB_VESSELAUTOPILOT     CHAR(32),
  WEB_BECOMECREW          CHAR(32),
  WEB_BECOMERADIO         CHAR(32),
  WEB_BECOMEADMIN         CHAR(32),
  WEB_BECOMEGENERAL       CHAR(32),
  WEB_PROCESSED           CHAR(10),
  WEB_PROCESSDATE         TIMESTAMP,
  WEB_VESSELENGINE        CHAR(32),
  WEB_BUSADVERT           CHAR(32),
  WEB_BILLBOARD           CHAR(32),
  WEB_WEBSEARCH           CHAR(32),
  WEB_INSTRUCTOR_OR_NEWS  CHAR(32),
  WEB_ASSISTED            CHAR(32),
  WEB_PROMOTION           CHAR(32),
  WEB_DISCLAIMER          CHAR(32),
  WEB_HOWHEARD            CHAR(32),
  WEB_VESSELENGINEHP      CHAR(20)
) ;

CREATE TABLE STRIPESTATEMENTPROCESSED (
  STRIPECHARGEID          CHAR(64) NOT NULL,
  SETTLEMENTDATE          DATE,
  SEQUENCENO              INTEGER NOT NULL,
  WEB_ORDERID             CHAR(32),
  WEB_ID                  INTEGER,
  STRIPECUSTOMERNAME      CHAR(64),
  STRIPECUSTOMEREMAIL     CHAR(64),
  STRIPECHARGEDESC        CHAR(64),
  STRIPE_AMOUNT_FEE       DOUBLE PRECISION,
  AMOUNT_FULL             DOUBLE PRECISION,
  AMOUNT_SURCHARGE        DOUBLE PRECISION,
  AMOUNT_NETCHARGE        DOUBLE PRECISION,
  CARDTYPE                CHAR(10),
  TRANSACTIONDATE         DATE,
  WEBRECORDNO             INTEGER,
  MEMBERNO                INTEGER,
  MEMBERNAME              CHAR(64),
  TRANSTYPE               CHAR(20),
  ACCEPT                  CHAR,
  MEMBERSHIPOLD           CHAR(30),
  MEMBERSHIPNEW           CHAR(30),
  FEE                     DOUBLE PRECISION,
  DONATION                DOUBLE PRECISION,
  SURCHARGE               DOUBLE PRECISION,
  RENEWALDATEOLD          DATE,
  RENEWALDATENEW          DATE,
  PROCESSED               CHAR,
  SURNAMEDONTMATCH        CHAR,
  TRANSACTIONSOURCE       CHAR(10),
  CUSTOMERREF1            CHAR(64),
  CUSTOMERREF2            CHAR(64),
  CUSTOMERREF3            CHAR(64),
  STRIPE_RECEIPT          CHAR(20),
  WEB_DATE                CHAR(32),
  WEB_MEMBERNO            CHAR(20),
  WEB_SURNAME             CHAR(64),
  WEB_FIRSTNAME           CHAR(32),
  WEB_DATEOFBIRTH         CHAR(32),
  WEB_MOBILE              CHAR(32),
  WEB_EMAIL               CHAR(64),
  WEB_ADDR_LINE           CHAR(64),
  WEB_ADDR_LINE2          CHAR(64),
  WEB_ADDR_SUBURB         CHAR(32),
  WEB_ADDR_PCODE          CHAR(32),
  WEB_SKU                 CHAR(30),
  WEB_PAID                INTEGER,
  WEB_RENEWAL             CHAR(30),
  WEB_VESSELNAME          CHAR(32),
  WEB_VESSELREGO          CHAR(32),
  WEB_VESSELMAKE          CHAR(48),
  WEB_VESSELTYPE          CHAR(32),
  WEB_VESSELCOLOUR        CHAR(32),
  WEB_VESSELLENGTH        CHAR(32),
  WEB_VESSELLENGTHF       CHAR(32),
  WEB_VESSELMARINERADIO   CHAR(32),
  WEB_VESSEL27MHZ         CHAR(32),
  WEB_VESSELVHF           CHAR(32),
  WEB_VESSELHF            CHAR(32),
  WEB_VESSELEPIRB         CHAR(32),
  WEB_VESSELNAVEQUIP      CHAR(32),
  WEB_VESSELGPS           CHAR(32),
  WEB_VESSELRADAR         CHAR(32),
  WEB_VESSELAUTOPILOT     CHAR(32),
  WEB_BECOMECREW          CHAR(32),
  WEB_BECOMERADIO         CHAR(32),
  WEB_BECOMEADMIN         CHAR(32),
  WEB_BECOMEGENERAL       CHAR(32),
  WEB_PROCESSED           CHAR(10),
  WEB_PROCESSDATE         TIMESTAMP,
  WEB_VESSELENGINE        CHAR(32),
  WEB_BUSADVERT           CHAR(32),
  WEB_BILLBOARD           CHAR(32),
  WEB_WEBSEARCH           CHAR(32),
  WEB_INSTRUCTOR_OR_NEWS  CHAR(32),
  WEB_ASSISTED            CHAR(32),
  WEB_PROMOTION           CHAR(32),
  WEB_DISCLAIMER          CHAR(32),
  WEB_HOWHEARD            CHAR(32),
  WEB_VESSELENGINEHP      CHAR(20)
) ;

CREATE TABLE STUDENTS (
  TITLE           CHAR(15),
  "FIRSTNAME"     CHAR(38),
  "LASTNAME"      CHAR(38),
  "MIDDLENAME"    CHAR(38),
  BUSINESSNAME    CHAR(50),
  ADDRESS1        CHAR(50),
  ADDRESS2        CHAR(38),
  ADDRESS_SUBURB  CHAR(50),
  ADDRESS_STATE   CHAR(3),
  ADDRESS_PCODE   CHAR(4),
  CONTACTPHONE    CHAR(20),
  COURSE          CHAR(30),
  COURSEDATE      TIMESTAMP,
  COURSERESULT    CHAR(15),
  LICENSENO       CHAR(15),
  MEMBERNO        INTEGER,
  NOTES           CHAR(50),
  ENTRYDATE       DATE,
  INFOSENT        CHAR,
  CONGRATSENT     CHAR
) ;

CREATE TABLE SUBSCRIPTIONS (
  MEMBERNOLOCAL      INTEGER,
  WOO_ID             INTEGER NOT NULL,
  WOO_ORDERNO        INTEGER,
  WOO_STATUS         CHAR(20),
  WOO_CUST_ID        INTEGER,
  WOO_FIRSTNAME      CHAR(50),
  WOO_LASTNAME       CHAR(50),
  WOO_COMPANY        CHAR(60),
  WOO_ADDRESS1       CHAR(50),
  WOO_ADDRESS2       CHAR(50),
  WOO_CITY           CHAR(50),
  WOO_STATE          CHAR(3),
  WOO_POSTCODE       CHAR(4),
  WOO_EMAIL          CHAR(96),
  WOO_PHONE          CHAR(20),
  WOO_STARTDATE      DATE,
  WOO_NEXTDATE       DATE,
  WOO_ENDDATE        DATE,
  WOO_PARENTORDERID  INTEGER
) ;

CREATE TABLE SUBURBS (
  POSTCODE          CHAR(4),
  SUBURB            CHAR(50),
  STATE             CHAR(3),
  COMMENTS          CHAR(50),
  DELIVERYOFFICE    CHAR(30),
  PRESORTINDICATOR  CHAR(5),
  PARCELZONE        CHAR(5),
  BSPNUMBER         CHAR(5),
  BSPNAME           CHAR(30),
  CATEGORY          CHAR(50)
) ;

CREATE TABLE TASKGROUPS (
  TASKGROUP  CHAR(20),
  RANKING    INTEGER
) ;

CREATE TABLE TASKHISTORY (
  TASK       CHAR(50),
  TASKDATE   DATE,
  DELEGATE1  INTEGER,
  DELEGATE2  INTEGER
) ;

CREATE TABLE TASKS (
  TASKNAME           CHAR(50),
  TASKGROUP          CHAR(20),
  COMMITTEEPOSITION  CHAR(40)
) ;

CREATE TABLE TRAININGMEMBERS (
  MEMBERNOLOCAL        INTEGER NOT NULL,
  MODULECODE           CHAR(16) NOT NULL,
  TDMMODULECODE        CHAR(16),
  THEORYTRAININGTICK   CHAR,
  THEORYTRAININGDATE   TIMESTAMP,
  THEORYTRAININGALLOW  CHAR,
  WRITTENASSESSTICK    CHAR,
  WRITTENASSESSDATE    TIMESTAMP,
  WRITTENASSESSALLOW   CHAR,
  GROUPDISCUSSTICK     CHAR,
  GROUPDISCUSSDATE     TIMESTAMP,
  GROUPDISCUSSALLOW    CHAR,
  ASSIGNMENTTICK       CHAR,
  ASSIGNMENTDATE       TIMESTAMP,
  ASSIGNMENTALLOW      CHAR,
  PRACTICALTICK        CHAR,
  PRACTICALDATE        TIMESTAMP,
  PRACTICALALLOW       CHAR,
  TASKBOOKTICK         CHAR,
  TASKBOOKDATE         TIMESTAMP,
  TASKBOOKALLOW        CHAR,
  RPLTICK              CHAR,
  RPLDATE              TIMESTAMP,
  RPLALLOW             CHAR,
  RANKVMR400           INTEGER NOT NULL,
  RANKVMRAQ            CHAR(16),
  COMMENTS             BLOB SUB_TYPE TEXT SEGMENT SIZE 20
) ;

CREATE TABLE TRAININGMODULEACHIEVED (
  MEMBERNOLOCAL  INTEGER NOT NULL,
  MODULECODE     CHAR(16) NOT NULL,
  DATECOMPLETED  DATE
) ;

CREATE TABLE TRAININGMODULES (
  MODULECODE               CHAR(16) NOT NULL,
  TDMMODULECODE            CHAR(16),
  MODULENAME               CHAR(255),
  MODULESHORTNAME          CHAR(96),
  MODULERANKVMR400         INTEGER,
  MODULERANKVMRAQ          CHAR(16),
  MODULETHEORYTICK         CHAR,
  MODULEWRITTENASSESSTICK  CHAR,
  MODULEGROUPDISCUSSTICK   CHAR,
  MODULEASSIGNMENTTICK     CHAR,
  MODULEPRACTICALTICK      CHAR,
  MODULETASKBOOKTICK       CHAR,
  MODULEORALTICK           CHAR,
  MODULERPLTICK            CHAR,
  MODULEBLOCK              INTEGER
) ;

CREATE TABLE TRAININGRANKACHIEVED (
  MEMBERNOLOCAL  INTEGER NOT NULL,
  RANK           INTEGER NOT NULL,
  DATECOMPLETED  DATE
) ;

CREATE TABLE TRANSTYPES (
  TRANSTYPE  CHAR(20) NOT NULL,
  TRANSRANK  INTEGER NOT NULL
) ;

CREATE TABLE USERACCESS (
  ID          INTEGER,
  USERNAME    VARCHAR(40),
  PERMISSION  VARCHAR(40)
) ;

CREATE TABLE VESSELS (
  VESSELNO            INTEGER,
  VESSELNAMELONG      CHAR(30),
  VESSELNAMESHORT     CHAR(7),
  VESSELREGO          CHAR(10),
  VESSELDATESTART     DATE,
  VESSELDATEND        DATE,
  VESSELENGINES       INTEGER,
  VESSELRANKING       INTEGER,
  VESSELINSHORE       CHAR,
  VESSELOFFSHORE      CHAR,
  VESSELINSHORERANK   INTEGER,
  VESSELOFFSHORERANK  INTEGER,
  BOATAREA1           CHAR(48),
  BOATAREA2           CHAR(48),
  BOATAREA3           CHAR(48),
  BOATAREA4           CHAR(48),
  BOATAREA5           CHAR(48),
  BOATAREA6           CHAR(48),
  BOATAREA7           CHAR(48),
  BOATAREA8           CHAR(48),
  BOATAREA9           CHAR(48),
  BOATAREA10          CHAR(48),
  BOATAREA11          CHAR(48),
  BOATAREA12          CHAR(48),
  BOATAREA13          CHAR(48),
  BOATAREA14          CHAR(48),
  BOATAREA15          CHAR(48),
  BOATAREA16          CHAR(48),
  BOATAREA17          CHAR(48),
  BOATAREA18          CHAR(48),
  BOATAREA19          CHAR(48),
  BOATAREA20          CHAR(48)
) ;
COMMIT;

/* Indexes */
CREATE INDEX BANKSTATEMENT_SEQNO
  ON BANKSTATEMENT
  (SEQUENCENO);
CREATE INDEX BANKSTATEMENTPROCESSED_SEQNO
  ON BANKSTATEMENTPROCESSED
  (SEQUENCENO);
CREATE INDEX BOATS_BOATNO
  ON BOATS
  (BOATNO);
CREATE INDEX BOATS_MEMBER
  ON BOATS
  (MEMBERNO);
CREATE INDEX BOATS_REGO
  ON BOATS
  (BOATREGO);
CREATE INDEX BPAYSTATEMENT_INDEX01
  ON BPAYSTATEMENT
  (SEQUENCENO);
CREATE INDEX BPAYSTATEMENTPROCESSED_INDEX01
  ON BPAYSTATEMENTPROCESSED
  (SEQUENCENO);
CREATE INDEX BPOINT_INDEX01
  ON BPOINTSTATEMENT
  (SEQUENCENO);
CREATE INDEX BPOINTPROCESSED_INDEX01
  ON BPOINTSTATEMENTPROCESSED
  (BPOINTFILENAME, SEQUENCENO);
CREATE INDEX COMMITTEE_RANKING
  ON COMMITTEE
  (RANKING);
CREATE INDEX COMMITTEEHISTORY_MEMBERNO
  ON COMMITTEEHISTORY
  (MEMBERNO);
CREATE INDEX COMMITTEEHISTORY_POSDATE
  ON COMMITTEEHISTORY
  (COMMITTEEPOSITION, COMMITTEEDATE);
CREATE INDEX COURSES_NONAME
  ON COURSES
  (NONAME);
CREATE INDEX CREWHISTORY_CREW
  ON CREWHISTORY
  (CREWNAME, CREWDATE);
CREATE INDEX CREWHISTORY_MEMBER
  ON CREWHISTORY
  (MEMBERNO);
CREATE INDEX DONATIONTYPES_RANK
  ON DONATIONTYPES
  (RANKING);
CREATE INDEX BOATCHECKS01_INDEX01
  ON DUTYBOATCHECKS
  (VESSEL, DUTYSEQUENCE, HEADING, SUBHEADING, SUBSUBHEADING);
CREATE INDEX BOATCHECKS01_INDEX02
  ON DUTYBOATCHECKS
  (VESSEL, DUTYSEQUENCE);
CREATE INDEX BYCREW
  ON DUTYCREWS
  (CREWMEMBER, DUTYSEQUENCE);
CREATE INDEX BYRANK
  ON DUTYCREWS
  (DUTYSEQUENCE, CREWRANKING, CREWMEMBER);
CREATE INDEX DUTYCREWS_PRIMARY
  ON DUTYCREWS
  (DUTYSEQUENCE, CREWMEMBER);
CREATE INDEX DUTYFIRSTAIDCHECKS_INDEX01
  ON DUTYFIRSTAIDCHECKS
  (VESSEL, DUTYSEQUENCE);
CREATE INDEX DUTYFIRSTAIDCHECKS_INDEX03
  ON DUTYFIRSTAIDCHECKS
  (VESSEL, DUTYSEQUENCE, HEADING, SUBHEADING);
CREATE INDEX BYTIMEOUT
  ON DUTYJOBS
  (JOBDUTYSEQUENCE, JOBTIMEOUT, JOBJOBSEQUENCE);
CREATE INDEX DUTYJOBS_JOBNO
  ON DUTYJOBS
  (JOBASSISTNO);
CREATE INDEX DUTYJOBS_MEMBERNO
  ON DUTYJOBS
  (JOBMEMBERNO);
CREATE INDEX DUTYJOBS_PRIMARY
  ON DUTYJOBS
  (JOBDUTYSEQUENCE, JOBJOBSEQUENCE);
CREATE INDEX ONJOB
  ON DUTYJOBSCREW
  (CREWDUTYSEQUENCE, CREWJOBSEQUENCE, CREWONJOB, CREWRANKING);
CREATE INDEX "PRIMARY"
  ON DUTYJOBSCREW
  (CREWDUTYSEQUENCE, CREWJOBSEQUENCE, CREWMEMBER);
CREATE INDEX DUTYLOG_CREW
  ON DUTYLOG
  (CREW);
CREATE INDEX DUTYLOG_CREWDATE
  ON DUTYLOG
  (CREW, DUTYDATE);
CREATE INDEX DUTYLOG_DUTYDATE
  ON DUTYLOG
  (DUTYDATE);
CREATE INDEX DUTYRANKING
  ON DUTYVESSELS
  (DUTYSEQUENCE, DUTYRANKING);
CREATE INDEX DUTYVESSELNAME
  ON DUTYVESSELS
  (DUTYVESSELNAME);
CREATE INDEX DUTYVESSELS_PRIMARY
  ON DUTYVESSELS
  (DUTYSEQUENCE, DUTYVESSELNO);
CREATE INDEX FEE_RANKING
  ON FEETYPES
  (RANKING);
CREATE INDEX GROUPACCESS_GROUPNAME
  ON GROUPACCESS
  (GROUPNAME);
CREATE INDEX JOBS_BOATNO
  ON JOBS
  (BOATNO);
CREATE DESC INDEX JOBS_DATE
  ON JOBS
  (JOBSDATE);
CREATE INDEX JOBS_JOBNO
  ON JOBS
  (JOBSJOBNO);
CREATE INDEX JOBS_MEMBER
  ON JOBS
  (MEMBERNO);
CREATE INDEX JOINREASONS_NAME
  ON JOINREASONS
  (JOINREASON);
CREATE INDEX MEMBERS_CREW_NAME
  ON MEMBERS
  (CURRENTCREW, SURNAME);
CREATE INDEX MEMBERS_LASTNAME
  ON MEMBERS
  (SURNAME);
CREATE INDEX MEMBERS_RANK_NAME
  ON MEMBERS
  (CURRENTRANK, SURNAME);
CREATE INDEX MEMBERS_TYPE_NAME
  ON MEMBERS
  (MEMBERTYPE, SURNAME);
CREATE INDEX MEMBERS_TYPE_NO
  ON MEMBERS
  (MEMBERTYPE, MEMBERNOLOCAL);
CREATE INDEX MEMBERS_VMRAQ
  ON MEMBERS
  (MEMBERNOVMRAQ);
CREATE INDEX MEMBERTRANS_RECEIPTNO
  ON MEMBERTRANS
  (RECEIPTNO);
CREATE DESC INDEX MEMBER_DATE
  ON MEMBERTRANS
  (MEMBERNO, TRANSDATE);
CREATE DESC INDEX MEMBER_NO
  ON MEMBERTRANS
  (MEMBERNO);
CREATE DESC INDEX TRANSDATE
  ON MEMBERTRANS
  (TRANSDATE);
CREATE INDEX MEMBERTYPES_RANKING
  ON MEMBERTYPES
  (MEMBERRANKING);
CREATE INDEX PAYRANK
  ON PAYMENTTYPES
  (RANKING);
CREATE INDEX RANKHISTORY_MEMBER
  ON RANKHISTORY
  (MEMBERNO);
CREATE INDEX RANKHISTORY_RANK
  ON RANKHISTORY
  (RANKNAME, RANKDATE);
CREATE INDEX RANKS_RANKING
  ON RANKS
  (RANKING);
CREATE INDEX RECEIPTS_MEMBERNO
  ON RECEIPTS
  (MEMBERNO);
CREATE INDEX REPORTS_REPORTNAME
  ON REPORTS
  (REPORTNAME);
CREATE INDEX STRIPESTATEMENT_INDEX01
  ON STRIPESTATEMENT
  (SEQUENCENO);
CREATE INDEX PK_STRIPESTATEMENTPROCESSED
  ON STRIPESTATEMENTPROCESSED
  (STRIPECHARGEID);
CREATE INDEX STUDENTS_COURSE
  ON STUDENTS
  (COURSE, "LASTNAME");
CREATE INDEX STUDENTS_DATE
  ON STUDENTS
  (ENTRYDATE, "LASTNAME");
CREATE INDEX SUBSCRIPTIONS_EMAIL
  ON SUBSCRIPTIONS
  (WOO_EMAIL);
CREATE INDEX SUBSCRIPTIONS_MEMBERNO
  ON SUBSCRIPTIONS
  (MEMBERNOLOCAL);
CREATE INDEX SUBURBS_PCODE
  ON SUBURBS
  (POSTCODE);
CREATE INDEX SUBURBS_SUBURB
  ON SUBURBS
  (SUBURB);
CREATE INDEX TASKGROUPS_GROUP
  ON TASKGROUPS
  (TASKGROUP);
CREATE INDEX TASKGROUPS_RANKING
  ON TASKGROUPS
  (RANKING);
CREATE INDEX TASKHISTORY_TASK
  ON TASKHISTORY
  (TASK, TASKDATE);
CREATE INDEX TASKS_GROUP
  ON TASKS
  (TASKGROUP, TASKNAME);
CREATE INDEX TASKS_POSITION
  ON TASKS
  (COMMITTEEPOSITION, TASKGROUP, TASKNAME);
CREATE INDEX TRAININGMEMBERS_RANKORDER
  ON TRAININGMEMBERS
  (MEMBERNOLOCAL, RANKVMR400, MODULECODE);
CREATE INDEX TRAININGMEMBERS_RANKVMR400
  ON TRAININGMEMBERS
  (RANKVMR400);
CREATE INDEX TRAININGMODULES_RANKORDER
  ON TRAININGMODULES
  (MODULERANKVMR400, MODULECODE);
CREATE INDEX TRANSRANK
  ON TRANSTYPES
  (TRANSRANK);
CREATE INDEX VESSELS_PRIMARY
  ON VESSELS
  (VESSELNO);
CREATE INDEX VESSELS_VESSELNAME
  ON VESSELS
  (VESSELNAMELONG);
CREATE INDEX VESSELS_VESSELNAMESHORT
  ON VESSELS
  (VESSELNAMESHORT);
CREATE INDEX VESSELS_VESSELRANKING
  ON VESSELS
  (VESSELRANKING);

/* Constraints */
ALTER TABLE BASECHECKS
  ADD CONSTRAINT BASECHECKS_INDEX01
  PRIMARY KEY ("SEQUENCE");

ALTER TABLE CREWS
  ADD CONSTRAINT CREWS_NAME
  PRIMARY KEY (CREWNAME);

ALTER TABLE DONATIONTYPES
  ADD CONSTRAINT DONATIONTYPES_NAME
  PRIMARY KEY (DONATIONTYPE);

ALTER TABLE DUTYBASECHECKS
  ADD CONSTRAINT DUTYBASECHECKS_INDEX01
  PRIMARY KEY (DUTYSEQUENCE, "SEQUENCE");

ALTER TABLE DUTYFIRSTAIDCHECKS
  ADD CONSTRAINT DUTYFIRSTAIDCHECKS_INDEX02
  PRIMARY KEY (DUTYSEQUENCE, VESSEL, "SEQUENCE", SUBSEQ);

ALTER TABLE DUTYLOG
  ADD CONSTRAINT DUTYLOG_DUTYSEQUENCE
  PRIMARY KEY (DUTYSEQUENCE);

ALTER TABLE FEETYPES
  ADD CONSTRAINT FEE_FEENAME
  PRIMARY KEY (FEETYPE);

ALTER TABLE FIRSTAIDCHECKS
  ADD CONSTRAINT FIRSTAIDCHECKS_INDEX01
  PRIMARY KEY (VESSEL, "SEQUENCE", SUBSEQ);

ALTER TABLE JOINREASONS
  ADD CONSTRAINT JOINREASONS_RANK
  PRIMARY KEY (JOINRANKING);

ALTER TABLE LETTERS
  ADD CONSTRAINT LETTERS_NAME
  UNIQUE (LETTERNAME);

ALTER TABLE MEMBERDIARY
  ADD CONSTRAINT MEMBERDIARY_MEMBERNO
  PRIMARY KEY (DIARYMEMBERNO, DIARYDATETIME);

ALTER TABLE MEMBERS
  ADD CONSTRAINT MEMBERS_VMR400
  PRIMARY KEY (MEMBERNOLOCAL);

ALTER TABLE MEMBERTYPES
  ADD CONSTRAINT MEMBERTYPES_NAME
  PRIMARY KEY (MEMBERTYPE);

ALTER TABLE PAYMENTTYPES
  ADD CONSTRAINT PAYNAME
  PRIMARY KEY (PAYTYPE);

ALTER TABLE RANKS
  ADD CONSTRAINT RANKS_NAME
  PRIMARY KEY (RANKNAME);

ALTER TABLE RECEIPTS
  ADD CONSTRAINT RECEIPTS_RECEIPTNO
  UNIQUE (RECEIPTNO);

ALTER TABLE SKIPPERCHECKS
  ADD CONSTRAINT SKIPPERCHECKS_INDEX01
  PRIMARY KEY (VESSEL, "SEQUENCE");

ALTER TABLE SUBSCRIPTIONS
  ADD CONSTRAINT SUBSCRIPTIONS_WOOID
  PRIMARY KEY (WOO_ID);

ALTER TABLE TRAININGMEMBERS
  ADD CONSTRAINT TRAININGMEMBERS_MEMBERNO
  PRIMARY KEY (MEMBERNOLOCAL, MODULECODE);

ALTER TABLE TRAININGMODULEACHIEVED
  ADD CONSTRAINT TRAININGMODULEACHIEVED_INDEX01
  PRIMARY KEY (MODULECODE, MEMBERNOLOCAL);

ALTER TABLE TRAININGMODULES
  ADD CONSTRAINT TRAININGMODULES_MODULECODE
  PRIMARY KEY (MODULECODE);

ALTER TABLE TRAININGRANKACHIEVED
  ADD CONSTRAINT TRAININGRANKACHIEVED_INDEX01
  PRIMARY KEY (RANK, MEMBERNOLOCAL);

ALTER TABLE TRANSTYPES
  ADD CONSTRAINT TRANSNAME
  PRIMARY KEY (TRANSTYPE);

/* Comments */
COMMENT ON COLUMN BANKSTATEMENT.ACCEPT
  IS 'Y / N';

COMMENT ON COLUMN BANKSTATEMENT.PROCESSED
  IS 'Y / N';
COMMENT ON COLUMN BANKSTATEMENTPROCESSED.ACCEPT
  IS 'Y / N';

COMMENT ON COLUMN BANKSTATEMENTPROCESSED.PROCESSED
  IS 'Y / N';
COMMENT ON COLUMN BASECHECKS.FRIDAYCREW
  IS 'Y / N';

COMMENT ON COLUMN BASECHECKS.SATURDAYCREW
  IS 'Y / N';
COMMENT ON COLUMN CREWS.BOATCREW
  IS 'Y / N';
COMMENT ON COLUMN DUTYBASECHECKS.CHECK_START
  IS 'Y / N';

COMMENT ON COLUMN DUTYBASECHECKS.CHECK_END
  IS 'Y / N';

COMMENT ON COLUMN DUTYBASECHECKS.FRIDAYCREW
  IS 'Y / N';

COMMENT ON COLUMN DUTYBASECHECKS.SATURDAYCREW
  IS 'Y / N';
COMMENT ON COLUMN DUTYLOG.DUTYLOGLOCKED
  IS 'Y / N';
COMMENT ON COLUMN MEMBERS.SURNAME
  IS 'Surname for Individuals
Business Name for Non-Individuals';

COMMENT ON COLUMN MEMBERS."FIRSTNAME"
  IS 'First name for Individuals
More business name for Non-Individuals';

COMMENT ON COLUMN MEMBERS.NAME03
  IS 'Other Names or Middle Names for Individuals only';

COMMENT ON COLUMN MEMBERS.NAMETYPE
  IS 'I for Individual
N for Non-Individual';

COMMENT ON COLUMN MEMBERS.POADDR1
  IS 'Postal Address';

COMMENT ON COLUMN MEMBERS.STADDR1
  IS 'Street Address';

COMMENT ON COLUMN MEMBERS.VSHEET
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.DUTYSKIPPER
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.LOA
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.BOATOWNER
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.BOATLICENCE
  IS 'y / n';

COMMENT ON COLUMN MEMBERS.CURRENTFREEBIE
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.WASAFREEBIE
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.APPLICATIONFORMRECEIVED
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.UNFINANCIAL
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.AWARD_OTH_1
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.EMERGENCY_ONLY
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.VSHEET_ELECTRONIC
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.VSHEET_GROUP
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.EMAIL_UNSUBSCRIBE
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.BECOMECREW
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.RENEW_AUTO
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.NEVERRENEW
  IS 'Y / N';

COMMENT ON COLUMN MEMBERS.TRAININGBLOCK
  IS '1, 2, 3, 4, or blank';

COMMENT ON COLUMN MEMBERS.STOPTRAINING
  IS 'Y / N';
COMMENT ON COLUMN SKIPPERCHECKS.CHECKSTART
  IS 'y / n';

COMMENT ON COLUMN SKIPPERCHECKS.CHECKEND
  IS 'Y / N';

COMMENT ON COLUMN SKIPPERCHECKS.CHECKSTARTALLOW
  IS 'Y / N';

COMMENT ON COLUMN SKIPPERCHECKS.CHECKENDALLOW
  IS 'Y / N';
COMMENT ON COLUMN STUDENTS.INFOSENT
  IS 'Y / N';

COMMENT ON COLUMN STUDENTS.CONGRATSENT
  IS 'Y / N';
COMMENT ON COLUMN TRAININGMODULES.MODULEBLOCK
  IS '1, 2, 3, or 4';
COMMENT ON COLUMN VESSELS.VESSELINSHORE
  IS 'Y / N';

COMMENT ON COLUMN VESSELS.VESSELOFFSHORE
  IS 'Y / N';

